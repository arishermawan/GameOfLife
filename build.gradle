/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'pmd'
    id 'com.github.ksoichiro.console.reporter' version '0.5.0'
}

check.dependsOn 'pmd'
test.dependsOn 'pmd'

mainClassName = 'App'

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    dependsOn 'cleanTest'

    testLogging {
    
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                    TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_ERROR,
                    TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

    
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
        events "passed", "skipped", "failed"
    }

    finalizedBy jacocoTestReport
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

repositories {
    jcenter()
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${reportsDir}/jacoco/")
    }
}

consoleReporter {
    junit {
        enabled false
    }
    jacoco {
        enabled true
    }
}

task pmd(type: Pmd) {
    ignoreFailures = true
    ruleSets =  [
            'java-codesize',
    ]
    ruleSetFiles = files('pmd-rulesets.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        consoleOutput = true
        xml.enabled = false
        html.enabled = true
        html.destination file("$reportsDir/pmd/index.html")
    }
}

